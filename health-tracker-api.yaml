openapi: 3.0.0
info:
  version: 1.0.0
  title: Health Tracker API
  description: This API provides endpoints for handling CRUD operations on the Health Tracker data.
  contact:
    name: Renu P Peter
    email: renuppeter19@gmail.com
paths:
  /api/users/{user-id}:
    parameters:
      - $ref: '#/components/parameters/UserIdPath'
    get:
      summary: Retrieve user details
      description: Get specific user information based on the provided user ID.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
    patch:
      summary: Update user details
      description: Update specific user information based on the provided user ID.
      requestBody:
        description: User details to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User details updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid user ID supplied
        404:
          description: User not found
        500:
          description: Internal server error
    delete:
      summary: Delete a user
      description: Delete a specific user based on the provided user ID.
      responses:
        204:
          description: No content (successful deletion)
        400:
          description: Invalid user ID supplied
        404:
          description: User not found

  /api/users:
    post:
      summary: Create a new user
      description: Add a new user to the app.
      requestBody:
        description: User object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid input
    get:
      summary: Retrieve a list of users
      description: Get a list of all users in the app.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/users/email/{email}:
    get:
      summary: Retrieve user details by email
      description: Get user information based on the provided email address.
      parameters:
        - name: email
          in: path
          description: User's email address
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid email supplied
        404:
          description: User not found

  /api/users/{user-id}/activities:
    parameters:
      - $ref: '#/components/parameters/UserIdPath'
    get:
      summary: Retrieve user activities
      description: Get a list of activities associated with the specified user.
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        404:
          description: User not found
    delete:
      summary: Delete user activities
      description: Delete all activities associated with the specified user.
      responses:
        204:
          description: No content (successful deletion)
        404:
          description: User or activity not found
        500:
          description: Internal server error

  /api/users/{user-id}/fitness:
    parameters:
      - $ref: '#/components/parameters/UserIdPath'
    get:
      summary: Retrieve user fitness goals
      description: Get a list of fitness goals associated with the specified user.
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fitness'
        404:
          description: User not found
    delete:
      summary: Delete user fitness goals
      description: Delete all fitness goals associated with the specified user.
      responses:
        204:
          description: No content (successful deletion)
        404:
          description: User or fitness goal not found
        500:
          description: Internal server error

  /api/activities:
    get:
      summary: Retrieve a list of activities
      description: Get a list of all activities in the app.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
    post:
      summary: Create a new activity
      description: Add a new activity to the app.
      requestBody:
        description: Activity object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        201:
          description: Activity created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        400:
          description: Invalid input

  /api/activities/{activity-id}:
    parameters:
      - $ref: '#/components/parameters/ActivityIdPath'
    get:
      summary: Retrieve activity details
      description: Get specific activity details based on the provided activity ID.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        404:
          description: Activity not found
    patch:
      summary: Update activity details
      description: Update specific activity information based on the provided activity ID.
      requestBody:
        description: Activity details to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        200:
          description: Activity updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        400:
          description: Invalid activity ID supplied
        404:
          description: Activity not found
        500:
          description: Internal server error
    delete:
      summary: Delete an activity
      description: Delete a specific activity based on the provided activity ID.
      responses:
        204:
          description: No content (successful deletion)
        400:
          description: Invalid activity ID supplied
        404:
          description: Activity not found

  /api/fitness:
    get:
      summary: Retrieve a list of fitness goals
      description: Get a list of all fitness goals in the app.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fitness'
    post:
      summary: Create a new fitness goal
      description: Add a new fitness goal to the app.
      requestBody:
        description: Fitness goal object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fitness'
      responses:
        201:
          description: Fitness goal created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fitness'
        400:
          description: Invalid input

  /api/fitness/{fitness-id}:
    parameters:
      - name: fitness-id
        in: path
        description: Fitness ID path parameter
        required: true
        schema:
          type: integer
          example: 1
    get:
      summary: Retrieve fitness goal details
      description: Get specific fitness goal details based on the provided fitness ID.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fitness'
        404:
          description: Fitness goal not found
    patch:
      summary: Update fitness goal details
      description: Update specific fitness goal information based on the provided fitness ID.
      requestBody:
        description: Fitness goal details to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fitness'
      responses:
        200:
          description: Fitness goal updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fitness'
        400:
          description: Invalid fitness ID supplied
        404:
          description: Fitness goal not found
        500:
          description: Internal server error
    delete:
      summary: Delete a fitness goal
      description: Delete a specific fitness goal based on the provided fitness ID.
      responses:
        204:
          description: No content (successful deletion)
        400:
          description: Invalid fitness ID supplied
        404:
          description: Fitness goal not found
        500:
          description: Internal server error

components:
  parameters:
    UserIdPath:
      in: path
      name: user-id
      description: User ID path parameter
      required: true
      schema:
        type: integer
        example: 3232
    ActivityIdPath:
      in: path
      name: activity-id
      description: Activity ID path parameter
      required: true
      schema:
        type: integer
        example: 1
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 3232
        name:
          type: string
          example: Joe Soap
        email:
          type: string
          example: joe@soap.com
    Activity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          example: Running
        duration:
          type: number
          format: float
          example: 12.5
        calories:
          type: integer
          example: 112
        started:
          type: string
          format: date-time
          example: 2020-06-10T04:59:27.258Z
        user-id:
          type: integer
          example: 3232
    Fitness:
      type: object
      properties:
        id:
          type: integer
          example: 1
        goal:
          type: string
          example: Lose 5 pounds
        duration:
          type: number
          format: float
          example: 25.5
        target:
          type: string
          example: Weight loss
        status:
          type: string
          example: In progress
        started:
          type: string
          format: date-time
          example: 2024-08-12T04:59:27.258Z
        ended:
          type: string
          format: date-time
          example: 2024-08-31T04:59:27.258Z
        user-id:
          type: integer
          example: 331
